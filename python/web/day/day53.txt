day53



1 web应用程序
2 http协议
      浏览器   ----   服务器
  请求协议格式
  
  相应协议格式
3 wsgiref模块

4 Django
  1 MVC和MTV模型
  2 下载django
  3  django-admin  startproject  mysite
  4  python manage.py startapp  app01
  5  python manage.py runserver IP:PORT
  demo示例:时间显示
           1 url.py   :    ("timer",view.timer)
           2 app01.views.py:
                 def timer(request):
                     #return HttpRespone("Yuan")
                     return render(request,"index.html") # render******重点
                     
                     
今日内容:

(1) Django简单实例
    登录认证示例
    
    KEY: 
        1 Django项目无论多大,只是一个应用程序
        2 地址栏发请求默认是GET请求
          form表单可以发送get请求,也可以发送post请求
        3 浏览器接受的响应体是字符串,由浏览器解释渲染成页面给用户看    
        4 form表单的提交按钮事件:
              给action对应的服务器发送请求
              ''
              GET /auth/?数据user=yuan&pwd=123  ....
              ......
              ......
              空行
              请求体 # user=yuan&pwd=123
              '' 
        5 新的响应会覆盖之前请求的响应页面
        
(2) MTV+url控制器
    一 路由控制器
         本质是URL与要为该URL调用的视图函数之间的映射表
    
        1 简单使用
        2 分组
        3 分发
        4 反向解析        
    二 视图函数
         请求对象
         响应对象
     
        
    三 模板(反向解析)
       1    渲染变量: {{}} 
               深度查询
               过滤器 {{ val|filter_name:参数 }}
       2    渲染标签  {%%}
            {%for%}
            {%endfor%}
            
       3 自定义过滤器:最少一个参数,最多两个参数
              
       4 继承
         {%extend%}        
    
    四 模型(******)
    
    
(3)组件
     1 Ajax
     2 cookie session 认证组件 难度系数******
     3 forms组件  难度系数******
     4 中间件
     5 分页器




                     
  
